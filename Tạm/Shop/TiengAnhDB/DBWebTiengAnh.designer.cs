#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TiengAnhDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ThiB1Online")]
	public partial class DBWebTiengAnhDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertDeThi(DeThi instance);
    partial void UpdateDeThi(DeThi instance);
    partial void DeleteDeThi(DeThi instance);
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertChiTietChuDe(ChiTietChuDe instance);
    partial void UpdateChiTietChuDe(ChiTietChuDe instance);
    partial void DeleteChiTietChuDe(ChiTietChuDe instance);
    partial void InsertChiTietDeThi(ChiTietDeThi instance);
    partial void UpdateChiTietDeThi(ChiTietDeThi instance);
    partial void DeleteChiTietDeThi(ChiTietDeThi instance);
    partial void InsertChuDe(ChuDe instance);
    partial void UpdateChuDe(ChuDe instance);
    partial void DeleteChuDe(ChuDe instance);
    #endregion
		
		public DBWebTiengAnhDataContext() : 
				base(global::TiengAnhDB.Properties.Settings.Default.ThiB1OnlineConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBWebTiengAnhDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBWebTiengAnhDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBWebTiengAnhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBWebTiengAnhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<DeThi> DeThis
		{
			get
			{
				return this.GetTable<DeThi>();
			}
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietChuDe> ChiTietChuDes
		{
			get
			{
				return this.GetTable<ChiTietChuDe>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this.GetTable<ChiTietDeThi>();
			}
		}
		
		public System.Data.Linq.Table<ChuDe> ChuDes
		{
			get
			{
				return this.GetTable<ChuDe>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _PassWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(50)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeThi")]
	public partial class DeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaDe;
		
		private System.Nullable<int> _IDChuDe;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntityRef<ChuDe> _ChuDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnIDChuDeChanging(System.Nullable<int> value);
    partial void OnIDChuDeChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    #endregion
		
		public DeThi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._ChuDe = default(EntityRef<ChuDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="VarChar(50)")]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChuDe", DbType="Int")]
		public System.Nullable<int> IDChuDe
		{
			get
			{
				return this._IDChuDe;
			}
			set
			{
				if ((this._IDChuDe != value))
				{
					if (this._ChuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChuDeChanging(value);
					this.SendPropertyChanging();
					this._IDChuDe = value;
					this.SendPropertyChanged("IDChuDe");
					this.OnIDChuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="ID", OtherKey="IDDeThi")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_DeThi", Storage="_ChuDe", ThisKey="IDChuDe", OtherKey="ID", IsForeignKey=true)]
		public ChuDe ChuDe
		{
			get
			{
				return this._ChuDe.Entity;
			}
			set
			{
				ChuDe previousValue = this._ChuDe.Entity;
				if (((previousValue != value) 
							|| (this._ChuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuDe.Entity = null;
						previousValue.DeThis.Remove(this);
					}
					this._ChuDe.Entity = value;
					if ((value != null))
					{
						value.DeThis.Add(this);
						this._IDChuDe = value.ID;
					}
					else
					{
						this._IDChuDe = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.DeThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TieuDe;
		
		private string _DapAnA;
		
		private string _DapAnB;
		
		private string _DapAnC;
		
		private string _DapAnD;
		
		private string _DapAn;
		
		private int _IDChiTietChuDe;
		
		private EntitySet<ChiTietDeThi> _ChiTietDeThis;
		
		private EntityRef<ChiTietChuDe> _ChiTietChuDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnDapAnAChanging(string value);
    partial void OnDapAnAChanged();
    partial void OnDapAnBChanging(string value);
    partial void OnDapAnBChanged();
    partial void OnDapAnCChanging(string value);
    partial void OnDapAnCChanged();
    partial void OnDapAnDChanging(string value);
    partial void OnDapAnDChanged();
    partial void OnDapAnChanging(string value);
    partial void OnDapAnChanged();
    partial void OnIDChiTietChuDeChanging(int value);
    partial void OnIDChiTietChuDeChanged();
    #endregion
		
		public CauHoi()
		{
			this._ChiTietDeThis = new EntitySet<ChiTietDeThi>(new Action<ChiTietDeThi>(this.attach_ChiTietDeThis), new Action<ChiTietDeThi>(this.detach_ChiTietDeThis));
			this._ChiTietChuDe = default(EntityRef<ChiTietChuDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnA", DbType="NVarChar(50)")]
		public string DapAnA
		{
			get
			{
				return this._DapAnA;
			}
			set
			{
				if ((this._DapAnA != value))
				{
					this.OnDapAnAChanging(value);
					this.SendPropertyChanging();
					this._DapAnA = value;
					this.SendPropertyChanged("DapAnA");
					this.OnDapAnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnB", DbType="NVarChar(50)")]
		public string DapAnB
		{
			get
			{
				return this._DapAnB;
			}
			set
			{
				if ((this._DapAnB != value))
				{
					this.OnDapAnBChanging(value);
					this.SendPropertyChanging();
					this._DapAnB = value;
					this.SendPropertyChanged("DapAnB");
					this.OnDapAnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnC", DbType="NVarChar(50)")]
		public string DapAnC
		{
			get
			{
				return this._DapAnC;
			}
			set
			{
				if ((this._DapAnC != value))
				{
					this.OnDapAnCChanging(value);
					this.SendPropertyChanging();
					this._DapAnC = value;
					this.SendPropertyChanged("DapAnC");
					this.OnDapAnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnD", DbType="NVarChar(50)")]
		public string DapAnD
		{
			get
			{
				return this._DapAnD;
			}
			set
			{
				if ((this._DapAnD != value))
				{
					this.OnDapAnDChanging(value);
					this.SendPropertyChanging();
					this._DapAnD = value;
					this.SendPropertyChanged("DapAnD");
					this.OnDapAnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DapAn
		{
			get
			{
				return this._DapAn;
			}
			set
			{
				if ((this._DapAn != value))
				{
					this.OnDapAnChanging(value);
					this.SendPropertyChanging();
					this._DapAn = value;
					this.SendPropertyChanged("DapAn");
					this.OnDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChiTietChuDe", DbType="Int NOT NULL")]
		public int IDChiTietChuDe
		{
			get
			{
				return this._IDChiTietChuDe;
			}
			set
			{
				if ((this._IDChiTietChuDe != value))
				{
					if (this._ChiTietChuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChiTietChuDeChanging(value);
					this.SendPropertyChanging();
					this._IDChiTietChuDe = value;
					this.SendPropertyChanged("IDChiTietChuDe");
					this.OnIDChiTietChuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_ChiTietDeThi", Storage="_ChiTietDeThis", ThisKey="ID", OtherKey="IDCauHoi")]
		public EntitySet<ChiTietDeThi> ChiTietDeThis
		{
			get
			{
				return this._ChiTietDeThis;
			}
			set
			{
				this._ChiTietDeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietChuDe_CauHoi", Storage="_ChiTietChuDe", ThisKey="IDChiTietChuDe", OtherKey="ID", IsForeignKey=true)]
		public ChiTietChuDe ChiTietChuDe
		{
			get
			{
				return this._ChiTietChuDe.Entity;
			}
			set
			{
				ChiTietChuDe previousValue = this._ChiTietChuDe.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietChuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietChuDe.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._ChiTietChuDe.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._IDChiTietChuDe = value.ID;
					}
					else
					{
						this._IDChiTietChuDe = default(int);
					}
					this.SendPropertyChanged("ChiTietChuDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_ChiTietDeThis(ChiTietDeThi entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietChuDe")]
	public partial class ChiTietChuDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NoiDung;
		
		private System.Nullable<int> _IDChuDe;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntityRef<ChuDe> _ChuDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnIDChuDeChanging(System.Nullable<int> value);
    partial void OnIDChuDeChanged();
    #endregion
		
		public ChiTietChuDe()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._ChuDe = default(EntityRef<ChuDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChuDe", DbType="Int")]
		public System.Nullable<int> IDChuDe
		{
			get
			{
				return this._IDChuDe;
			}
			set
			{
				if ((this._IDChuDe != value))
				{
					if (this._ChuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChuDeChanging(value);
					this.SendPropertyChanging();
					this._IDChuDe = value;
					this.SendPropertyChanged("IDChuDe");
					this.OnIDChuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietChuDe_CauHoi", Storage="_CauHois", ThisKey="ID", OtherKey="IDChiTietChuDe")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_ChiTietChuDe", Storage="_ChuDe", ThisKey="IDChuDe", OtherKey="ID", IsForeignKey=true)]
		public ChuDe ChuDe
		{
			get
			{
				return this._ChuDe.Entity;
			}
			set
			{
				ChuDe previousValue = this._ChuDe.Entity;
				if (((previousValue != value) 
							|| (this._ChuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuDe.Entity = null;
						previousValue.ChiTietChuDes.Remove(this);
					}
					this._ChuDe.Entity = value;
					if ((value != null))
					{
						value.ChiTietChuDes.Add(this);
						this._IDChuDe = value.ID;
					}
					else
					{
						this._IDChuDe = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietChuDe = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietChuDe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDeThi")]
	public partial class ChiTietDeThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDeThi;
		
		private int _IDCauHoi;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<DeThi> _DeThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDeThiChanging(int value);
    partial void OnIDDeThiChanged();
    partial void OnIDCauHoiChanging(int value);
    partial void OnIDCauHoiChanged();
    #endregion
		
		public ChiTietDeThi()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			this._DeThi = default(EntityRef<DeThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDeThi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDeThi
		{
			get
			{
				return this._IDDeThi;
			}
			set
			{
				if ((this._IDDeThi != value))
				{
					if (this._DeThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDeThiChanging(value);
					this.SendPropertyChanging();
					this._IDDeThi = value;
					this.SendPropertyChanged("IDDeThi");
					this.OnIDDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCauHoi
		{
			get
			{
				return this._IDCauHoi;
			}
			set
			{
				if ((this._IDCauHoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCauHoiChanging(value);
					this.SendPropertyChanging();
					this._IDCauHoi = value;
					this.SendPropertyChanged("IDCauHoi");
					this.OnIDCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_ChiTietDeThi", Storage="_CauHoi", ThisKey="IDCauHoi", OtherKey="ID", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._IDCauHoi = value.ID;
					}
					else
					{
						this._IDCauHoi = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeThi_ChiTietDeThi", Storage="_DeThi", ThisKey="IDDeThi", OtherKey="ID", IsForeignKey=true)]
		public DeThi DeThi
		{
			get
			{
				return this._DeThi.Entity;
			}
			set
			{
				DeThi previousValue = this._DeThi.Entity;
				if (((previousValue != value) 
							|| (this._DeThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeThi.Entity = null;
						previousValue.ChiTietDeThis.Remove(this);
					}
					this._DeThi.Entity = value;
					if ((value != null))
					{
						value.ChiTietDeThis.Add(this);
						this._IDDeThi = value.ID;
					}
					else
					{
						this._IDDeThi = default(int);
					}
					this.SendPropertyChanged("DeThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuDe")]
	public partial class ChuDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenChuDe;
		
		private string _GhiChu;
		
		private System.Nullable<int> _SoCauHoi;
		
		private EntitySet<DeThi> _DeThis;
		
		private EntitySet<ChiTietChuDe> _ChiTietChuDes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenChuDeChanging(string value);
    partial void OnTenChuDeChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnSoCauHoiChanging(System.Nullable<int> value);
    partial void OnSoCauHoiChanged();
    #endregion
		
		public ChuDe()
		{
			this._DeThis = new EntitySet<DeThi>(new Action<DeThi>(this.attach_DeThis), new Action<DeThi>(this.detach_DeThis));
			this._ChiTietChuDes = new EntitySet<ChiTietChuDe>(new Action<ChiTietChuDe>(this.attach_ChiTietChuDes), new Action<ChiTietChuDe>(this.detach_ChiTietChuDes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuDe", DbType="NVarChar(50)")]
		public string TenChuDe
		{
			get
			{
				return this._TenChuDe;
			}
			set
			{
				if ((this._TenChuDe != value))
				{
					this.OnTenChuDeChanging(value);
					this.SendPropertyChanging();
					this._TenChuDe = value;
					this.SendPropertyChanged("TenChuDe");
					this.OnTenChuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoCauHoi", DbType="Int")]
		public System.Nullable<int> SoCauHoi
		{
			get
			{
				return this._SoCauHoi;
			}
			set
			{
				if ((this._SoCauHoi != value))
				{
					this.OnSoCauHoiChanging(value);
					this.SendPropertyChanging();
					this._SoCauHoi = value;
					this.SendPropertyChanged("SoCauHoi");
					this.OnSoCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_DeThi", Storage="_DeThis", ThisKey="ID", OtherKey="IDChuDe")]
		public EntitySet<DeThi> DeThis
		{
			get
			{
				return this._DeThis;
			}
			set
			{
				this._DeThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuDe_ChiTietChuDe", Storage="_ChiTietChuDes", ThisKey="ID", OtherKey="IDChuDe")]
		public EntitySet<ChiTietChuDe> ChiTietChuDes
		{
			get
			{
				return this._ChiTietChuDes;
			}
			set
			{
				this._ChiTietChuDes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = this;
		}
		
		private void detach_DeThis(DeThi entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = null;
		}
		
		private void attach_ChiTietChuDes(ChiTietChuDe entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = this;
		}
		
		private void detach_ChiTietChuDes(ChiTietChuDe entity)
		{
			this.SendPropertyChanging();
			entity.ChuDe = null;
		}
	}
}
#pragma warning restore 1591
